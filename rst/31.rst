不要忽略Warning
===============

对于一些编译时的警告信息，请不要忽视它们。虽然，这些Warning不会妨碍目标代码的生成，但这并不意味着你的程序就是好的。必竟，并不是编译成功的程序才是正确的，编译成功只是万里长征的第一步，后面还有大风大浪在等着你。从编译程序开始，不但要改正每个error，还要修正每个warning。这是一个有修养的程序员该做的事。

一般来说，一面的一些警告信息是常见的：

#. 声明了未使用的变量。（虽然编译器不会编译这种变量，但还是把它从源程序中注释或是删除吧）
#. 使用了隐晦声明的函数。（也许这个函数在别的C文件中，编译时会出现这种警告，你应该这使用之前使用\ ``extern``\ 关键字声明这个函数）
#. 没有转换一个指针。（例如\ ``malloc``\ 返回的指针是\ ``void``\ 的，你没有把之转成你实际类型而报警，还是手动的在之前明显的转换一下吧）
#. 类型向下转换。（例如：\ ``float f = 2.0``\ ; 这种语句是会报警告的，编译会告诉你正试图把一个\ ``double``\ 转成\ ``float``\ ，你正在阉割一个变量，你真的要这样做吗？还是在2.0后面加个\ ``f``\ 吧，不然，2.0就是一个\ ``double``\ ，而不是\ ``float``\ 了）
    
不管怎么说，编译器的Warning不要小视，最好不要忽略，一个程序都做得出来，何况几个小小的Warning呢？
