为常量声明宏
============

最好不要在程序中出现数字式的“硬编码”，如：

.. code-block:: c

    int user[120];
    
为这个120声明一个宏吧。为所有出现在程序中的这样的常量都声明一个宏吧。比如TimeOut的时间，最大的用户数量，还有其它，只要是常量就应该声明成宏。如果，突然在程序中出现下面一段代码，

.. code-block:: c

    for ( i=0; i<120; i++){
        ....
    }

120是什么？为什么会是120？这种“硬编码”不仅让程序很读，而且也让程序很不好维护，如果要改变这个数字，得同时对所有程序中这个120都要做修改，这对修改程序的人来说是一个很大的痛苦。所以还是把常量声明成宏，这样，一改百改，而且也很利于程序阅读。

.. code-block:: c

    #define MAX_USR_CNT 120
    
    for ( i=0; i<MAX_USER_CNT; i++){
        ....
    }

这样就很容易了解这段程序的意图了。

有的程序员喜欢为这种变量声明全局变量，其实，全局变量应该尽量的少用，全局变量不利于封装，也不利于维护，而且对程序执行空间有一定的开销，一不小心就造成系统换页，造成程序执行速度效率等问题。所以声明成宏，即可以免去全局变量的开销，也会有速度上的优势。
