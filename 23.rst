static的使用
============

\ ``static``\ 关键字，表示了“静态”，一般来说，他会被经常用于变量和函数。一个\ ``static``\ 的变量，其实就是全局变量，只不过他是有作用域的全局变量。比如一个函数中的\ ``static``\ 变量：

.. code-block:: c


    char*
    getConsumerName()
    {
        static int cnt = 0;
    
        ....
        cnt++;
        ....
    }

\ ``cnt``\ 变量的值会跟随着函数的调用次而递增，函数退出后，\ ``cnt``\ 的值还存在，只是\ ``cnt``\ 只能在函数中才能被访问。而\ ``cnt``\ 的内存也只会在函数第一次被调用时才会被分配和初始化，以后每次进入函数，都不为\ ``static``\ 分配了，而直接使用上一次的值。

对于一些被经常调用的函数内的常量，最好也声明成\ ``static``\ （参见第12条）。

但\ ``static``\ 的最多的用处却不在这里，其最大的作用的控制访问，在C中如果一个函数或是一个全局变量被声明为\ ``static``\ ，那么，这个函数和这个全局变量，将只能在这个C文件中被访问，如果别的C文件中调用这个C文件中的函数，或是使用其中的全局（用\ ``extern``\ 关键字），将会发生链接时错误。这个特性可以用于数据和程序保密。
