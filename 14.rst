函数的传值和传指针
==================

向函数传参数时，一般而言，传入非const的指针时，就表示，在函数中要修改这个指针把指内存中的数据。如果是传值，那么无论在函数内部怎么修改这个值，也影响不到传过来的值，因为传值是只内存拷贝。

什么？你说这个特性你明白了，好吧，让我们看看下面的这个例程：

.. code-block:: c
    void
    GetVersion(char* pStr)
    {
        pStr = malloc(10);
        strcpy ( pStr, "2.0" );
    }

    main()
    {
        char* ver = NULL;
        GetVersion ( ver );
        ...
        ...
        free ( ver );
    }

我保证，类似这样的问题是一个新手最容易犯的错误。程序中妄图通过函数GetVersion给指针ver分配空间，但这种方法根本没有什么作用，原因就是——这是传值，不是传指针。你或许会和我争论，我分明传的时指针啊？再仔细看看，其实，你传的是指针其实是在传值。
